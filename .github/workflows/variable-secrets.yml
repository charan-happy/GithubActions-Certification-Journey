name: Exploring variables and secrets

on:
  workflow_dispatch:

  # schedule:
  #   - cron: '*/1 * * * *'
  # push

# environment variables can be defined at the workflow level, job level, or step level
# environment variables defined at the workflow level are available to all jobs and steps in the workflow
# environment variables defined at the job level are available to all steps in the job
# environment variables defined at the step level are available to the step in which they are defined and child steps

## environmental variables at workflow level

env:
    CONTAINER_REGISTRY: docker.io
    IMAGE_NAME: github-actions-nginx
    IMAGE_TAG: latest
 
# concurrency can be enabled at the workflow level, job level, or step level

jobs:
    docker:
        runs-on: ubuntu-latest
        steps:
            - name: docker build
              run: echo docker build -t $CONTAINER_REGISTRY/${{ vars.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .

            - name: docker login
              run: echo docker login --username=${{ vars.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}
   
            - name: docker publish
              run: echo docker push $CONTAINER_REGISTRy/${{ vars.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

    deploy:
        if : github.ref == 'refs/heads/main' # if condition is used to run the job only when the condition is true
       #  timeout-minutes: 1
        needs: docker
        concurrency:
            group: production-deployments
            cancel-in-progress: true
            # if cancel-in-progress value is false then the current running job is going to run but newly triggered job will be in pending state until the old job completed 

      # Note : Github will automatically cancel the job when the job is running state even after 6 hours/ 360 minutes of job start 
        runs-on: ubuntu-latest
        steps:
            - name: docker run
              timeout-minutes: 1
              run: |
               echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/${{ vars.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
               sleep 70s

